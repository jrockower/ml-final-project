,Model Objects,Mean Squared Error,R-Squared,Adjusted R-Squared
state_ridge,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('ridge', Ridge(alpha=0.1))]),
             iid=True,
             param_grid={'poly__degree': (1, 2),
                         'ridge__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.4581674888339506,0.5962437831789185,0.5446661427067643
state_lasso,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('lasso', Lasso(alpha=0.1))]),
             iid=True,
             param_grid={'lasso__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),
                         'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8966014576504122,0.20987756364267696,0.10894375939743006
state_linear,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('linreg', LinearRegression())]),
             iid=True, param_grid={'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.4512106420048186,0.6023744454916956,0.5515799634786587
state_en,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('en', ElasticNet())]),
             iid=True,
             param_grid={'en__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),
                         'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8623761954443013,0.24003828592181076,0.1429573483948564
ridge,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('ridge', Ridge(alpha=0.1))]),
             iid=True,
             param_grid={'poly__degree': (1, 2),
                         'ridge__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8151970933482989,0.2816144698273457,0.26469597002255496
lasso,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('lasso', Lasso(alpha=0.1))]),
             iid=True,
             param_grid={'lasso__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),
                         'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8966014576504122,0.20987756364267696,0.19126960771397195
linear,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('linreg', LinearRegression())]),
             iid=True, param_grid={'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8152322752388684,0.2815834660844282,0.26466423611902523
en,"GridSearchCV(cv=5,
             estimator=Pipeline(steps=[('poly',
                                        PolynomialFeatures(include_bias=False)),
                                       ('en', ElasticNet())]),
             iid=True,
             param_grid={'en__alpha': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),
                         'poly__degree': (1, 2)},
             return_train_score=True, scoring='neg_mean_squared_error',
             verbose=1)",0.8623761954443013,0.24003828592181076,0.22214063685837515
